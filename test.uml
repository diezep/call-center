[MyApp | +_MyAppState createState() ] [<abstract>StatefulWidget]<:-[MyApp] [_MyAppState | +Widget build() ] [<abstract>State<T>]<:-[_MyAppState] [WeekSchedule ] [<abstract>MList<E> | +lastIndex: int; +first: E; +last: E; +length: int; +isEmpty: bool; +isNotEmpty: bool | +void forEach(); +void add(); +void addAll(); +E removeAt(); +void remove(); +MList where(); +void clear(); +String toString(); +E [](); +void []=() ] [MListException | +message: String | +String toString(); <static>+MListException RangeError(); <static>+MListException NegativeIndex() ] [<abstract>DateBase | +month: int; +year: int; +day: int; +hour: int; +seconds: int; +minutes: int; +timeSinceEponch: int | +bool ==(); +bool <(); +bool >(); +bool <=(); +bool >=(); +String toString(); +bool isValid() ] [DateException | +message: String ] [MDuration | +hours: int; +minutes: int | +String toString(); <static>+MDuration fromString(); +Map toMap(); <static>+MDuration fromMap() ] [MDurationException | +message: String | +String toString() ] [<abstract>Employee | +id: String; +name: String ] [<abstract>AgentBase | +extensionNumber: String; +extraWeeekHours: int; +clients: MSimpleList<Client>; +speciality: AgentSpeciality; +image: String | +String toString() ] [<abstract>AgentBase]o-[MSimpleList<E>] [<abstract>AgentBase]o-[AgentSpeciality] [<abstract>Employee]<:-[<abstract>AgentBase] [<abstract>CallBase | +id: String; +duration: MDuration; +date: Date | +bool ==(); +String toString() ] [<abstract>CallBase]o-[MDuration] [<abstract>CallBase]o-[Date] [<abstract>ClientBase | +id: String; +name: String; +telephoneNumber: String; +calls: MSimpleList<Call>; +hashCode: int | +bool ==(); +String toString(); +void addCall() ] [<abstract>ClientBase]o-[MSimpleList<E>] [MLinkedList<E> | +anchor: MLinkedListNode<E>; +first: E; +last: E; +isEmpty: bool; +isNotEmpty: bool; +length: int | +E [](); +void []=(); +void add(); +void addAll(); +void remove(); +E removeAt(); +MLinkedList where(); +void clear(); +dynamic toString(); +List toWidgets(); +void forEach() ] [MLinkedList<E>]o-[MLinkedListNode<E>] [<abstract>MList<E>]<:-[MLinkedList<E>] [MLinkedListNode<E> | -_prev: MLinkedListNode<E>; -_next: MLinkedListNode<E>; -_data: E; +data: E; +next: MLinkedListNode<E>; +prev: MLinkedListNode<E> ] [MLinkedListNode<E>]o-[MLinkedListNode<E>] [MListNode<E> | -_data: E; -_next: MListNode<E>; +data: E; +next: MListNode<E> ] [MListNode<E>]o-[MListNode<E>] [MListNodeException | +message: String | +String toString() ] [MSimpleList<E> | +anchor: MListNode<E>; +first: E; +last: E; +isEmpty: bool; +isNotEmpty: bool; +length: int | +E [](); +void []=(); +void add(); +void addAll(); +void remove(); +E removeAt(); +MSimpleList where(); +int indexWhere(); +void clear(); +dynamic toString(); +List toWidgets(); +void forEach() ] [MSimpleList<E>]o-[MListNode<E>] [<abstract>MList<E>]<:-[MSimpleList<E>] [ColorHelper | <static>+primaryTextColor: Color; <static>+secondTextColor: Color; <static>+background: Color; <static>+backgroundContrast: Color; <static>+primaryElevatedButtonColor: Color; <static>+dangerElevatedButtonColor: Color; <static>+iconColor: Color; <static>+iconVertColor: Color ] [ColorHelper]o-[Color] [AgentPopupMenu | +index: int; <static>+values: List<AgentPopupMenu>; <static>+UPDATE: AgentPopupMenu; <static>+REMOVE: AgentPopupMenu ] [AgentPopupMenu]o-[AgentPopupMenu] [DataType | +index: int; <static>+values: List<DataType>; <static>+IMAGES: DataType; <static>+AGENTS: DataType; <static>+CLIENTS: DataType; <static>+CALLS: DataType ] [DataType]o-[DataType] [FilterAgents | +index: int; <static>+values: List<FilterAgents>; <static>+NAME: FilterAgents; <static>+SPECIALITY: FilterAgents; <static>+ID: FilterAgents; <static>+CLIENTS: FilterAgents ] [FilterAgents]o-[FilterAgents] [AgentSpeciality | +index: int; <static>+values: List<AgentSpeciality>; <static>+SERVERS: AgentSpeciality; <static>+DESKTOPS: AgentSpeciality; <static>+LAPTOPS: AgentSpeciality; <static>+PRINTERS: AgentSpeciality; <static>+COMPUTER_NETWORKS: AgentSpeciality; <static>+LINUX: AgentSpeciality; <static>+NO_SELECTED: AgentSpeciality ] [AgentSpeciality]o-[AgentSpeciality] [Client | +id: String; +name: String; +calls: MSimpleList<Call>; +telephoneNumber: String | +String toString(); +void addCall(); +bool ==(); +Map toMap(); <static>+Client fromMap() ] [Client]o-[MSimpleList<E>] [<abstract>ClientBase]<:-[Client] [DataInformation | +decimals: int; -_bits: int; -_length: int; -_dataType: DataType; +bitsFormated: String; +length: int; +textType: String; +bits: int ] [DataInformation]o-[DataType] [Call | +dynamic toString(); <static>+Call fromMap(); +Map toMap() ] [<abstract>CallBase]<:-[Call] [Agent | +String toString(); <static>+Agent fromMap(); +Map toJson() ] [<abstract>AgentBase]<:-[Agent] [Date | +timeSinceEponch: int | +bool <(); +bool <=(); +bool >(); +bool >=(); +bool isValid(); +String toString(); <static>+Date now(); <static>+Date fromMap(); +Map toMap() ] [<abstract>DateBase]<:-[Date] [DateException | +message: String ] [DiskProvider | +agentsPath: String; +agentsImagesDirPath: String; +imagesInfo: dynamic | +dynamic writeInDisk(); +dynamic readFromDisk(); +dynamic saveImageAgent(); +dynamic removeAgentImages() ] [DashboardScreen | <static>+routeName: dynamic | +_DashboardScreenState createState() ] [<abstract>StatefulWidget]<:-[DashboardScreen] [_DashboardScreenState | +theme: ThemeData; +textTheme: TextTheme; -_agents: MLinkedList<Agent>; +filterSelected: FilterAgents; +searchAgent: dynamic; +diskProvider: DiskProvider; +agentsInfo: DataInformation; +clientsInfo: DataInformation; +callsInfo: DataInformation; +agents: MLinkedList<Agent>; +clients: MLinkedList<Client>; +calls: MLinkedList<Call> | -dynamic _readSavedData(); +void initState(); +Widget build(); -void _onRemoveData(); -void _onSaveData(); -void _onAddAgent(); -void _onFilterSelected(); +void mergeSortt(); +void merge() ] [_DashboardScreenState]o-[ThemeData] [_DashboardScreenState]o-[TextTheme] [_DashboardScreenState]o-[MLinkedList<E>] [_DashboardScreenState]o-[FilterAgents] [_DashboardScreenState]o-[DiskProvider] [_DashboardScreenState]o-[DataInformation] [<abstract>State<T>]<:-[_DashboardScreenState] [AgentProfileScreen | +agent: Agent; +onRemoveClients: void Function(); +onAddClient: dynamic Function(Client); +onRemoveClient: dynamic Function(Client); +onUpdateCall: dynamic Function(Client, Call); +onAddCall: dynamic Function(Client, Call); +onRemoveCall: dynamic Function(Client, Call) | +_AgentProfileScreenState createState() ] [AgentProfileScreen]o-[Agent] [AgentProfileScreen]o-[void Function()] [AgentProfileScreen]o-[dynamic Function(Client)] [AgentProfileScreen]o-[dynamic Function(Client, Call)] [<abstract>StatefulWidget]<:-[AgentProfileScreen] [_AgentProfileScreenState | +tabController: TabController; +showAddButton: bool | +void initState(); +Widget build(); -void _onAddClient(); -void _onRemoveClient(); -void _onAddCall(); -void _onUpdateCall(); -void _onRemoveCall(); -void _onRemoveClients() ] [_AgentProfileScreenState]o-[TabController] [<abstract>State<T>]<:-[_AgentProfileScreenState] [<abstract>SingleTickerProviderStateMixin<T>]<:-[_AgentProfileScreenState] [Badge | +text: dynamic; +color: Color; +textStyle: TextStyle | +Widget build() ] [Badge]o-[Color] [Badge]o-[TextStyle] [<abstract>StatelessWidget]<:-[Badge] [CardClient | +client: Client; +onRemoveClient: dynamic Function(); +onAddCall: dynamic Function(); +onUpdateCall: dynamic Function(Call); +onRemoveCall: dynamic Function(Call) | +_CardClientState createState() ] [CardClient]o-[Client] [CardClient]o-[dynamic Function()] [CardClient]o-[dynamic Function(Call)] [<abstract>StatefulWidget]<:-[CardClient] [_CardClientState | +Widget build() ] [<abstract>State<T>]<:-[_CardClientState] [DashboarCard | +primaryText: dynamic; +secondaryText: dynamic; +captionText: dynamic; +icon: Icon; +onAdd: Function; +theme: ThemeData; +textTheme: TextTheme | +Widget build() ] [DashboarCard]o-[Icon] [DashboarCard]o-[ThemeData] [DashboarCard]o-[TextTheme] [<abstract>StatelessWidget]<:-[DashboarCard] [CardAgent | +agent: Agent; +onRemoveAgent: void Function(); +onRemoveClients: void Function(); +onUpdateAgent: dynamic Function(Agent); +onAddClient: dynamic Function(Client); +onRemoveClient: dynamic Function(Client); +onAddCall: void Function(Client, Call); +onUpdateCall: void Function(Client, Call); +onRemoveCall: void Function(Client, Call); +theme: ThemeData; +textTheme: TextTheme | +Widget build() ] [CardAgent]o-[Agent] [CardAgent]o-[void Function()] [CardAgent]o-[dynamic Function(Agent)] [CardAgent]o-[dynamic Function(Client)] [CardAgent]o-[void Function(Client, Call)] [CardAgent]o-[ThemeData] [CardAgent]o-[TextTheme] [<abstract>StatelessWidget]<:-[CardAgent] [ConfirmationDialog | +text: dynamic | +Widget build() ] [<abstract>StatelessWidget]<:-[ConfirmationDialog] [AddClientDialog | +client: Client | +_AddClientDialogState createState() ] [AddClientDialog]o-[Client] [<abstract>StatefulWidget]<:-[AddClientDialog] [_AddClientDialogState | +formKey: GlobalKey<FormState>; +newClient: bool | +void initState(); +Widget build(); -dynamic _onSave() ] [_AddClientDialogState]o-[<abstract>GlobalKey<T>] [<abstract>State<T>]<:-[_AddClientDialogState] [AddAgentDialog | +agent: Agent | +_AddAgentDialogState createState() ] [AddAgentDialog]o-[Agent] [<abstract>StatefulWidget]<:-[AddAgentDialog] [_AddAgentDialogState | +formKey: GlobalKey<FormState>; +newAgent: bool | +void initState(); +Widget build(); -void _onUpdateImage(); -dynamic _onSave() ] [_AddAgentDialogState]o-[<abstract>GlobalKey<T>] [<abstract>State<T>]<:-[_AddAgentDialogState] [AddCallDialog | +call: Call | +_AddCallDialogState createState() ] [AddCallDialog]o-[Call] [<abstract>StatefulWidget]<:-[AddCallDialog] [_AddCallDialogState | +formKey: GlobalKey<FormState>; +newCall: bool | +void initState(); +Widget build(); -dynamic _onSave() ] [_AddCallDialogState]o-[<abstract>GlobalKey<T>] [<abstract>State<T>]<:-[_AddCallDialogState]
